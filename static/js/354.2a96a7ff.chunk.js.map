{"version":3,"file":"static/js/354.2a96a7ff.chunk.js","mappings":"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","sources":["webpack://01-react-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://01-react-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://01-react-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__cgvUH\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__rjf6Z\"};","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://www.vokrug.tv/pic/person/2/b/f/4/2bf448098b7badf3b37e87c510da29bc.jpeg\" alt=\"\" />\r\n      { props.message }\r\n      <div>\r\n        <span>{props.likesCount} Like</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements =\r\n    [...props.posts].reverse().map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      postText: ''\r\n    },\r\n    onSubmit: () => {\r\n      props.addPost(formik.values.postText)\r\n      formik.values.postText = ''\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <MyPostsForm formik={formik} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.formik.handleSubmit}>\r\n      <div>\r\n        <input type=\"text\" name='postText' onChange={props.formik.handleChange} />\r\n      </div>\r\n      <div>\r\n        <button type='submit'>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (message) => {\r\n      dispatch(addPostActionCreator(message))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileInfo_status__x5pS7\"};","import s from './ProfileInfo.module.css'\r\nimport React from \"react\"\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n \r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {\r\n        !editMode &&\r\n          <span className={s.status} onDoubleClick={activateEditMode}>\r\n              {props.status || '____'}\r\n          </span>\r\n        }\r\n      </div>\r\n      <div>\r\n        {\r\n          editMode &&\r\n          <input onChange={onStatusChange} className={s.status} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusHooks","import Preloader from '../../common/Preloader/Preloader'\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusHooks from './ProfileStatusHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div >\r\n      {/* <div>\r\n        <img alt='' src='https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300' />\r\n      </div> */}\r\n      <div className={s.descriptionBlock}>\r\n        <img alt='' src={props.profile.photos.large} />\r\n        <div>{props.profile.fullName}</div>\r\n      </div>\r\n      <ProfileStatusHooks updateStatus={props.updateStatus} status={props.status} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { setUserProfile, getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { withRouter } from '../../hoc/withRouter';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId\r\n    if (!userId) {\r\n      userId = this.props.userId\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let userId = this.props.router.params.userId\r\n    if (prevProps.router.params.userId !== userId) {\r\n      let userId = this.props.userId\r\n      this.props.getUserProfile(userId)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nlet AuthNavigateComponent = compose(connect(mapStateToProps, { setUserProfile, getStatus, getUserProfile, updateStatus }), withRouter, \r\n  withAuthNavigate)(ProfileContainer)\r\n\r\nexport default AuthNavigateComponent","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n  class NavigateComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to='/login' />\r\n      }\r\n        \r\n      \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\n  return ConnectedAuthNavigateComponent\r\n}"],"names":["props","className","s","src","alt","message","likesCount","MyPosts","React","postsElements","posts","reverse","map","p","id","formik","useFormik","initialValues","postText","onSubmit","addPost","values","MyPostsForm","handleSubmit","type","name","onChange","handleChange","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","fullName","Preloader","ProfileContainer","userId","this","router","params","getUserProfile","getStatus","prevProps","compose","auth","isAuth","setUserProfile","withRouter","withAuthNavigate","mapStateToPropsForNavigate","Component","NavigateComponent","to"],"sourceRoot":""}