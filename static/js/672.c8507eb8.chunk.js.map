{"version":3,"file":"static/js/672.c8507eb8.chunk.js","mappings":"0MACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,SCYhL,EAVmB,SAACA,GAClB,OACE,0BACE,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACE,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,YCCpD,EANgB,SAACL,GACf,OACE,gBAAKC,UAAWC,EAAAA,OAAhB,SAA2BF,EAAMM,W,UCsB/BC,EAAiB,SAACP,GACtB,IAAMQ,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbJ,QAAS,IAEXK,SAAU,SAACC,GACTZ,EAAMa,mBAAmBL,EAAOI,OAAON,YAG3C,OACE,kBAAMK,SAAUH,EAAOM,aAAvB,WACE,0BAAK,kBAAOC,KAAM,OAAQV,KAAM,UAAWW,SAAUR,EAAOS,kBAC5D,0BAAK,mBAAQF,KAAK,SAAb,wBAKX,EAvCgB,SAACf,GACf,IAAIkB,EAAQlB,EAAMmB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAuBlB,KAAMkB,EAAElB,KAAMD,GAAImB,EAAEnB,IAA1BmB,EAAEnB,OAC5DoB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAoBpB,QAASoB,EAAEpB,SAAjBoB,EAAEtB,OAK/D,OACE,iBAAKH,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SACGkB,KAEH,iBAAKnB,UAAWC,EAAAA,SAAhB,WACE,yBAAMsB,KACN,SAACjB,EAAD,CAAgBM,mBAVG,SAACP,GACxBN,EAAM2B,YAAYrB,a,oBCWtB,GAHyBsB,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAdX,SAACX,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACW,GACxB,MAAO,CACLH,YAAa,SAACI,GACZD,GAASE,EAAAA,EAAAA,GAAmBD,SAK6CE,EAAAA,EAAtDL,CAAwEM,I,iJCf7FC,EAA6B,SAACjB,GAAD,MAAY,CAC3CkB,OAAQlB,EAAMmB,KAAKD,SAGRH,EAAmB,SAACK,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAKxC,MAAMoC,QAKT,SAACE,GAAD,UAAeE,KAAKxC,SAJlB,SAAC,KAAD,CAAUG,GAAG,eAJmB,GACbsC,EAAAA,WAahC,OAFqCZ,EAAAA,EAAAA,IAAQM,EAARN,CAAoCU","sources":["webpack://01-react-project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__faiYq\",\"dialogsItems\":\"Dialogs_dialogsItems__VkZTc\",\"active\":\"Dialogs_active__PeCqI\",\"messages\":\"Dialogs_messages__JQ0BC\",\"message\":\"Dialogs_message__cQnAg\"};","import { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.dialog}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message","import DialogItem from './DialogItem/DialogItem'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport { useFormik } from 'formik'\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />)\r\n  let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} />)\r\n\r\n  let onSendMessageClick = (message) => {\r\n    props.sendMessage(message)\r\n  }\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageForm onSendMessageClick={onSendMessageClick} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      message: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      props.onSendMessageClick(formik.values.message)\r\n    }\r\n  })\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div><input type={'text'} name={'message'} onChange={formik.handleChange} /></div>\r\n      <div><button type='submit'>send</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { compose } from 'redux'\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    },\r\n  }\r\n}\r\n\r\nconst DialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps), withAuthNavigate)(Dialogs)\r\n\r\n\r\nexport default DialogsContainer","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n  class NavigateComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to='/login' />\r\n      }\r\n        \r\n      \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\n  return ConnectedAuthNavigateComponent\r\n}"],"names":["props","className","s","to","id","name","message","AddMessageForm","formik","useFormik","initialValues","onSubmit","values","onSendMessageClick","handleSubmit","type","onChange","handleChange","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","sendMessage","compose","connect","dispatch","newMessageBody","sendMessageCreator","withAuthNavigate","Dialogs","mapStateToPropsForNavigate","isAuth","auth","Component","NavigateComponent","this","React"],"sourceRoot":""}